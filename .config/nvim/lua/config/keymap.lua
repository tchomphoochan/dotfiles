-- Set map leader to space
vim.g.mapleader = " "

-- Add keybindings to the attached LSP
vim.api.nvim_create_autocmd("LspAttach", {
    callback = function(e)
        local opts = { buffer = e.buf }
        vim.keymap.set("n", "K", function() vim.lsp.buf.hover() end, opts)
        vim.keymap.set("n", "J", function() vim.diagnostic.open_float() end, opts)
        vim.keymap.set("n", "[d", function() vim.diagnostic.goto_next() end, opts)
        vim.keymap.set("n", "]d", function() vim.diagnostic.goto_prev() end, opts)
        vim.keymap.set("n", "<leader>vws", function() vim.lsp.buf.workspace_symbol() end, opts)
        vim.keymap.set("n", "<leader>vca", function() vim.lsp.buf.code_action() end, opts)
        vim.keymap.set("n", "<leader>vrr", function() vim.lsp.buf.references() end, opts)
        vim.keymap.set("n", "<leader>vrn", function() vim.lsp.buf.rename() end, opts)
        vim.keymap.set("i", "<C-h>", function() vim.lsp.buf.signature_help() end, opts)

        -- Generated by yours truly ChatGPT:
        vim.keymap.set("n", "gk", function()
          local bufname = vim.api.nvim_buf_get_name(0)
          local ext = bufname:match("^.+(%..+)$") or ""
          ext = ext:lower()

          if ext == ".h" or ext == ".hpp" or ext == ".hxx" then
            vim.lsp.buf.definition()
          else
            vim.lsp.buf.declaration()
          end
        end, { desc = "Jump between declaration/definition" })
        vim.keymap.set("n", "<leader>o", "<C-o>", { desc = "Jump back in jumplist" })
        vim.keymap.set("n", "<leader>i", "<C-i>", { desc = "Jump forward in jumplist" })


    end
})

-- Highlight yanked text for visual hint
vim.api.nvim_create_autocmd('TextYankPost', {
    pattern = '*',
    callback = function()
        vim.highlight.on_yank({
            higroup = 'IncSearch',
            timeout = 40,
        })
    end,
})

